Things that are yet to be done:

1) Implemeneting all the quantile sketches.
2) Testing all the quantile sketches.
3) Implementing our algorithm

- ability to reset the sketch (i.e., re-initialize to empty stream)
- ability to write the sketch to a stream
- ability to read the sketch from a stream


Here are some comments on the chi-square code. Please divide these fixes amongst yourselves.





/****
FIX FIRST !!!!
****/


Naming conventions


One-sample

Why is the CM sketch commented out?
The “default” switch statement should do more than just print an error message; it should throw an exception. Otherwise, the program will continue to try and run with the class having no initialized quantile sketch.
The calculate_statistic_ifNormal method should preferably call the calculate_statistic method, giving it the inverse cdf function for the normal distribution. This avoids repeated code.
Remove extraneous cout statements once debugging is complete.
For code adapted from another source, give the full reference so that someone can look up that source. So, don’t just say “John D. Cook”, you should also give the URL where you found this code so that someone can go look it up later and see where it came from / if it makes sense. Similarly with Abramowitz and Stegun.
Remember to check if the value for the bin exceeds the 2sqrt(N) bound (in which case we fail the test).

Two-sample

Same naming convention issues as above.
Design-wise, we may want to think about having a single chi-square data structure that you can use for either a one-sample or two-sample test. For the two-sample, either one could take another chi-square data structure as a parameter and do the two-sample algorithm.
Why are the CM and QDigest sketches commented out?
I don’t see a reason for N, M, and K to be private data members. N and M can be accessed from the two sketches and K is dependent on the parameter given to the calculate_statistic method.
See comment above about iterator variable being a double and how it goes from 1 to k-1 (one fewer buckets).
Why does the reverse_quantile method for the quantile sketches need to pass in the memory as a parameter? The sketch should know how much memory it has.
Why do you divide the reverse_quantile by the memory? Shouldn’t the reverse_quantile just return exactly that—the reverse quantile (a number between 0 and 1)?
You can compute sqrt(M/N) once and store it so that it doesn’t have to be recomputed every time.
Don’t forget that if any of the bins’ values is larger than a known threshold, we just declare the test failed (and we don’t have an accurate value for the statistic).

Commenting

There should be class comments for each class:
https://google.github.io/styleguide/cppguide.html#Class_Comments

Also, function/method comments for each class:
https://google.github.io/styleguide/cppguide.html#Function_Comments

There are also many other comment guidelines in this webpage. These comments won’t get written by someone in the future. If they’re going to be done, you have to spend the time and do them now.
